apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: noobaas.noobaa.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.services.serviceMgmt.nodePorts
    description: Management Endpoints
    name: Mgmt-Endpoints
    type: string
  - JSONPath: .status.services.serviceS3.nodePorts
    description: S3 Endpoints
    name: S3-Endpoints
    type: string
  - JSONPath: .status.actualImage
    description: Actual Image
    name: Image
    type: string
  - JSONPath: .status.phase
    description: Phase
    name: Phase
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: noobaa.io
  names:
    kind: NooBaa
    listKind: NooBaaList
    plural: noobaas
    shortNames:
    - nb
    singular: noobaa
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: Standard object metadata.
          type: object
        spec:
          description: Specification of the desired behavior of the noobaa system.
          properties:
            affinity:
              description: Affinity (optional) passed through to noobaa's pods
              type: object
            coreResources:
              description: CoreResources (optional) overrides the default resource
                requirements for the server container
              type: object
            dbImage:
              description: DBImage (optional) overrides the default image for the
                db container
              type: string
            dbResources:
              description: DBResources (optional) overrides the default resource requirements
                for the db container
              type: object
            dbStorageClass:
              description: DBStorageClass (optional) overrides the default cluster
                StorageClass for the database volume. For the time being this field
                is immutable and can only be set on system creation. This affects
                where the system stores its database which contains system config,
                buckets, objects meta-data and mapping file parts to storage locations.
                +immutable
              type: string
            dbVolumeResources:
              description: 'DBVolumeResources (optional) overrides the default PVC
                resource requirements for the database volume. For the time being
                this field is immutable and can only be set on system creation. This
                is because volume size updates are only supported for increasing the
                size, and only if the storage class specifies `allowVolumeExpansion:
                true`, +immutable'
              type: object
            image:
              description: Image (optional) overrides the default image for the server
                container
              type: string
            imagePullSecret:
              description: ImagePullSecret (optional) sets a pull secret for the system
                image
              type: object
            pvPoolDefaultStorageClass:
              description: PVPoolDefaultStorageClass (optional) overrides the default
                cluster StorageClass for the pv-pool volumes. This affects where the
                system stores data chunks (encrypted). Updates to this field will
                only affect new pv-pools, but updates to existing pools are not supported
                by the operator.
              type: string
            tolerations:
              description: Tolerations (optional) passed through to noobaa's pods
              items:
                type: object
              type: array
          type: object
        status:
          description: Most recently observed status of the noobaa system.
          properties:
            accounts:
              description: Accounts reports accounts info for the admin account
              properties:
                admin:
                  properties:
                    secretRef:
                      type: object
                  required:
                  - secretRef
                  type: object
              required:
              - admin
              type: object
            actualImage:
              description: ActualImage is set to report which image the operator is
                using
              type: string
            conditions:
              description: Conditions is a list of conditions related to operator
                reconciliation +patchMergeKey=type +patchStrategy=merge
              items:
                properties:
                  lastHeartbeatTime:
                    format: date-time
                    type: string
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                - lastHeartbeatTime
                - lastTransitionTime
                type: object
              type: array
            observedGeneration:
              description: ObservedGeneration is the most recent generation observed
                for this noobaa system. It corresponds to the CR generation, which
                is updated on mutation by the API Server.
              format: int64
              type: integer
            phase:
              description: Phase is a simple, high-level summary of where the System
                is in its lifecycle
              type: string
            readme:
              description: Readme is a user readable string with explanations on the
                system
              type: string
            relatedObjects:
              description: RelatedObjects is a list of objects related to this operator.
              items:
                type: object
              type: array
            services:
              description: Services reports addresses for the services
              properties:
                serviceMgmt:
                  properties:
                    externalDNS:
                      description: ExternalDNS are external public addresses for the
                        service
                      items:
                        type: string
                      type: array
                    externalIP:
                      description: ExternalIP are external public addresses for the
                        service LoadBalancerPorts such as AWS ELB provide public address
                        and load balancing for the service IngressPorts are manually
                        created public addresses for the service https://kubernetes.io/docs/concepts/services-networking/service/#external-ips
                        https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
                        https://kubernetes.io/docs/concepts/services-networking/ingress/
                      items:
                        type: string
                      type: array
                    internalDNS:
                      description: InternalDNS are internal addresses of the service
                        inside the cluster
                      items:
                        type: string
                      type: array
                    internalIP:
                      description: InternalIP are internal addresses of the service
                        inside the cluster https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
                      items:
                        type: string
                      type: array
                    nodePorts:
                      description: NodePorts are the most basic network available.
                        NodePorts use the networks available on the hosts of kubernetes
                        nodes. This generally works from within a pod, and from the
                        internal network of the nodes, but may fail from public network.
                        https://kubernetes.io/docs/concepts/services-networking/service/#nodeport
                      items:
                        type: string
                      type: array
                    podPorts:
                      description: 'PodPorts are the second most basic network address.
                        Every pod has an IP in the cluster and the pods network is
                        a mesh so the operator running inside a pod in the cluster
                        can use this address. Note: pod IPs are not guaranteed to
                        persist over restarts, so should be rediscovered. Note2: when
                        running the operator outside of the cluster, pod IP is not
                        accessible.'
                      items:
                        type: string
                      type: array
                  type: object
                serviceS3:
                  properties:
                    externalDNS:
                      description: ExternalDNS are external public addresses for the
                        service
                      items:
                        type: string
                      type: array
                    externalIP:
                      description: ExternalIP are external public addresses for the
                        service LoadBalancerPorts such as AWS ELB provide public address
                        and load balancing for the service IngressPorts are manually
                        created public addresses for the service https://kubernetes.io/docs/concepts/services-networking/service/#external-ips
                        https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
                        https://kubernetes.io/docs/concepts/services-networking/ingress/
                      items:
                        type: string
                      type: array
                    internalDNS:
                      description: InternalDNS are internal addresses of the service
                        inside the cluster
                      items:
                        type: string
                      type: array
                    internalIP:
                      description: InternalIP are internal addresses of the service
                        inside the cluster https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
                      items:
                        type: string
                      type: array
                    nodePorts:
                      description: NodePorts are the most basic network available.
                        NodePorts use the networks available on the hosts of kubernetes
                        nodes. This generally works from within a pod, and from the
                        internal network of the nodes, but may fail from public network.
                        https://kubernetes.io/docs/concepts/services-networking/service/#nodeport
                      items:
                        type: string
                      type: array
                    podPorts:
                      description: 'PodPorts are the second most basic network address.
                        Every pod has an IP in the cluster and the pods network is
                        a mesh so the operator running inside a pod in the cluster
                        can use this address. Note: pod IPs are not guaranteed to
                        persist over restarts, so should be rediscovered. Note2: when
                        running the operator outside of the cluster, pod IP is not
                        accessible.'
                      items:
                        type: string
                      type: array
                  type: object
              required:
              - serviceMgmt
              - serviceS3
              type: object
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: backingstores.noobaa.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.type
    description: Type
    name: Type
    type: string
  - JSONPath: .status.phase
    description: Phase
    name: Phase
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: noobaa.io
  names:
    kind: BackingStore
    listKind: BackingStoreList
    plural: backingstores
    singular: backingstore
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: Standard object metadata.
          type: object
        spec:
          description: Specification of the desired behavior of the noobaa BackingStore.
          properties:
            awsS3:
              description: AWSS3Spec specifies a backing store of type aws-s3
              properties:
                region:
                  description: Region is the AWS region
                  type: string
                secret:
                  description: Secret refers to a secret that provides the credentials
                    The secret should define AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
                  type: object
                sslDisabled:
                  description: SSLDisabled allows to disable SSL and use plain http
                  type: boolean
                targetBucket:
                  description: TargetBucket is the name of the target S3 bucket
                  type: string
              required:
              - targetBucket
              - secret
              type: object
            azureBlob:
              description: AzureBlob specifies a backing store of type azure-blob
              properties:
                secret:
                  description: Secret refers to a secret that provides the credentials
                    The secret should define AccountName and AccountKey as provided
                    by Azure Blob.
                  type: object
                targetBlobContainer:
                  description: TargetBlobContainer is the name of the target Azure
                    Blob container
                  type: string
              required:
              - targetBlobContainer
              - secret
              type: object
            googleCloudStorage:
              description: GoogleCloudStorage specifies a backing store of type google-cloud-storage
              properties:
                secret:
                  description: Secret refers to a secret that provides the credentials
                    The secret should define GoogleServiceAccountPrivateKeyJson containing
                    the entire json string as provided by Google.
                  type: object
                targetBucket:
                  description: TargetBucket is the name of the target S3 bucket
                  type: string
              required:
              - targetBucket
              - secret
              type: object
            pvPool:
              description: PVPool specifies a backing store of type pv-pool
              properties:
                numVolumes:
                  description: NumVolumes is the number of volumes to allocate
                  format: int64
                  type: integer
                resources:
                  description: VolumeResources represents the minimum resources each
                    volume should have.
                  type: object
                storageClass:
                  description: StorageClass is the name of the storage class to use
                    for the PV's
                  type: string
              required:
              - numVolumes
              type: object
            s3Compatible:
              description: S3Compatible specifies a backing store of type s3-compatible
              properties:
                endpoint:
                  description: 'Endpoint is the S3 compatible endpoint: http(s)://host:port'
                  type: string
                secret:
                  description: Secret refers to a secret that provides the credentials
                    The secret should define AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
                  type: object
                signatureVersion:
                  description: SignatureVersion specifies the client signature version
                    to use when signing requests.
                  type: string
                targetBucket:
                  description: TargetBucket is the name of the target S3 bucket
                  type: string
              required:
              - targetBucket
              - secret
              - endpoint
              type: object
            type:
              description: Type is an enum of supported types
              type: string
          required:
          - type
          type: object
        status:
          description: Most recently observed status of the noobaa BackingStore.
          properties:
            conditions:
              description: Conditions is a list of conditions related to operator
                reconciliation +patchMergeKey=type +patchStrategy=merge
              items:
                properties:
                  lastHeartbeatTime:
                    format: date-time
                    type: string
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                - lastHeartbeatTime
                - lastTransitionTime
                type: object
              type: array
            phase:
              description: Phase is a simple, high-level summary of where the backing
                store is in its lifecycle
              type: string
            relatedObjects:
              description: RelatedObjects is a list of objects related to this operator.
              items:
                type: object
              type: array
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: bucketclasses.noobaa.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.placementPolicy
    description: Placement
    name: Placement
    type: string
  - JSONPath: .status.phase
    description: Phase
    name: Phase
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: noobaa.io
  names:
    kind: BucketClass
    listKind: BucketClassList
    plural: bucketclasses
    singular: bucketclass
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: Standard object metadata.
          type: object
        spec:
          description: Specification of the desired behavior of the noobaa BucketClass.
          properties:
            placementPolicy:
              description: PlacementPolicy specifies the placement policy for the
                bucket class
              properties:
                tiers:
                  description: Tiers is an ordered list of tiers to use. The model
                    is a waterfall - push to first tier by default, and when no more
                    space spill "cold" storage to next tier.
                  items:
                    properties:
                      backingStores:
                        description: BackingStores is an unordered list of backing
                          store names. The meaning of the list depends on the placement.
                        items:
                          type: string
                        type: array
                      placement:
                        description: Placement specifies the type of placement for
                          the tier If empty it should have a single backing store.
                        enum:
                        - Spread
                        - Mirror
                        type: string
                    type: object
                  type: array
              required:
              - tiers
              type: object
          required:
          - placementPolicy
          type: object
        status:
          description: Most recently observed status of the noobaa BackingStore.
          properties:
            conditions:
              description: Conditions is a list of conditions related to operator
                reconciliation +patchMergeKey=type +patchStrategy=merge
              items:
                properties:
                  lastHeartbeatTime:
                    format: date-time
                    type: string
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                - lastHeartbeatTime
                - lastTransitionTime
                type: object
              type: array
            phase:
              description: Phase is a simple, high-level summary of where the System
                is in its lifecycle
              type: string
            relatedObjects:
              description: RelatedObjects is a list of objects related to this operator.
              items:
                type: object
              type: array
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: objectbucketclaims.objectbucket.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.storageClassName
    description: StorageClass
    name: Storage-Class
    type: string
  - JSONPath: .status.phase
    description: Phase
    name: Phase
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: objectbucket.io
  names:
    kind: ObjectBucketClaim
    listKind: ObjectBucketClaimList
    plural: objectbucketclaims
    shortNames:
    - obc
    - obcs
    singular: objectbucketclaim
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: Standard object metadata.
          type: object
        spec:
          description: Specification of the desired behavior of the claim.
          properties:
            additionalConfig:
              additionalProperties:
                type: string
              description: AdditionalConfig gives providers a location to set proprietary
                config values (tenant, namespace, etc)
              type: object
            bucketName:
              description: BucketName (not recommended) the name of the bucket. Caution!
                In-store bucket names may collide across namespaces.  If you define
                the name yourself, try to make it as unique as possible.
              type: string
            generateBucketName:
              description: GenerateBucketName (recommended) a prefix for a bucket
                name to be followed by a hyphen and 5 random characters. Protects
                against in-store name collisions.
              type: string
            storageClassName:
              description: StorageClass names the StorageClass object representing
                the desired provisioner and parameters
              type: string
          required:
          - storageClassName
          type: object
        status:
          description: Most recently observed status of the claim.
          properties:
            phase:
              description: ObjectBucketClaimStatusPhase is set by the controller to
                save the state of the provisioning process
              enum:
              - Pending
              - Bound
              - Released
              - Failed
              type: string
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: objectbuckets.objectbucket.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.storageClassName
    description: StorageClass
    name: Storage-Class
    type: string
  - JSONPath: .spec.claimRef.namespace
    description: ClaimNamespace
    name: Claim-Namespace
    type: string
  - JSONPath: .spec.claimRef.name
    description: ClaimName
    name: Claim-Name
    type: string
  - JSONPath: .spec.reclaimPolicy
    description: ReclaimPolicy
    name: Reclaim-Policy
    type: string
  - JSONPath: .status.phase
    description: Phase
    name: Phase
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: objectbucket.io
  names:
    kind: ObjectBucket
    listKind: ObjectBucketList
    plural: objectbuckets
    shortNames:
    - ob
    - obs
    singular: objectbucket
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: Standard object metadata.
          type: object
        spec:
          description: Specification of the desired behavior of the bucket.
          properties:
            additionalState:
              additionalProperties:
                type: string
              description: additionalState gives providers a location to set proprietary
                config values (tenant, namespace, etc)
              type: object
            claimRef:
              description: ObjectReference to ObjectBucketClaim
              type: object
            endpoint:
              description: Endpoint contains all connection relevant data that an
                app may require for accessing the bucket
              properties:
                additionalConfig:
                  additionalProperties:
                    type: string
                  description: AdditionalConfig gives providers a location to set
                    proprietary config values (tenant, namespace, etc)
                  type: object
                bucketHost:
                  description: Bucket address hostname
                  type: string
                bucketName:
                  description: Bucket name
                  type: string
                bucketPort:
                  description: Bucket address port
                  type: integer
                region:
                  description: Bucket region
                  type: string
                subRegion:
                  description: Bucket sub-region
                  type: string
              type: object
            reclaimPolicy:
              description: Describes a policy for end-of-life maintenance of ObjectBucket.
              enum:
              - Delete
              - Retain
              - Recycle
              type: string
            storageClassName:
              description: StorageClass names the StorageClass object representing
                the desired provisioner and parameters
              type: string
          required:
          - storageClassName
          type: object
        status:
          description: Most recently observed status of the bucket.
          properties:
            phase:
              description: ObjectBucketStatusPhase is set by the controller to save
                the state of the provisioning process
              enum:
              - Bound
              - Released
              - Failed
              type: string
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
